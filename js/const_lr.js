    constant_learning_rate = [0.7020508860581198, 0.6956474127726946, 0.6898040426305588, 0.68433862796037, 0.6791293189338351, 0.6741463292730318, 0.6694232007019743, 0.6648558858137686, 0.6605097503062836, 0.6562288294902358, 0.6519602629984901, 0.647722944426044, 0.6435635186916248, 0.6394696863039628, 0.6353765113241335, 0.6312931933761626, 0.6272698948661611, 0.6232444469618321, 0.6192456149267435, 0.6152581929277183, 0.6113465301988552, 0.6074873150584853, 0.6036605343128721, 0.5998455259008243, 0.5960362983161146, 0.5922384459034323, 0.5884744728731058, 0.5847397646528352, 0.5810062956110831, 0.5772764231962527, 0.573543923404118, 0.5698258879317584, 0.5661080613024928, 0.5623856334149875, 0.558666083483263, 0.5549581069372028, 0.5512692811638515, 0.5475837635648689, 0.543894679818646, 0.5402255715366721, 0.5365798822241505, 0.5329607205872, 0.5293474871253486, 0.5257615735196427, 0.5222077028997869, 0.5186803146880868, 0.5151622273428677, 0.5116731083996684, 0.5082295073725551, 0.5048184789384936, 0.5014221256419747, 0.4980677807012201, 0.4947488515881125, 0.49147868961736835, 0.4882526536515331, 0.4850782716501773, 0.4819529419924644, 0.47888562445000254, 0.47587722174557584, 0.47291800227561853, 0.4700021457432398, 0.46713241358254665, 0.46431064277187173, 0.46154152674903487, 0.4588213413731495, 0.45614959837285574, 0.4535263271371887, 0.45095165064282483, 0.448425598228747, 0.4459475753975342, 0.44351867512004844, 0.4411380012704018, 0.43880463233148714, 0.43651842813977804, 0.4342797072781298, 0.4320897873229953, 0.42994563823596776, 0.4278467308317662, 0.4257922977197614, 0.42378206117694567, 0.42181628418500816, 0.419894043876785, 0.4180144289395299, 0.4161797826563503, 0.4143873568472019, 0.41263632252181204, 0.41092682846778006, 0.40925807919688145, 0.4076282894696883, 0.40603726558976966, 0.40448386676125947, 0.40296728005020344, 0.4014869710473541, 0.4000430303859472, 0.39863419260259136, 0.3972594587380209, 0.39591813358541034, 0.39460936342609676, 0.3933331295945027, 0.3920881978167682, 0.39087427636974, 0.38969076218146514, 0.3885361406901991, 0.3874098105013983, 0.3863111557071512, 0.38523953837397945, 0.3841942393263835, 0.3831746813216905, 0.38218028640034274, 0.3812103539650392, 0.3802645009799546, 0.37934203730140376, 0.3784421641118474, 0.3775642734250788, 0.37670785801813816, 0.3758724382933836, 0.37505722499245536, 0.3742615425551825, 0.3734849822889215, 0.3727271952543689, 0.37198767632005647, 0.37126594458075934, 0.37056149958048773, 0.36987376825785856, 0.3692022339179035, 0.36854679944187957, 0.3679068894787381, 0.3672819924226316, 0.36667183333954606, 0.36607586607768366, 0.36549381054169006, 0.3649253916913113, 0.3643700562055169, 0.36382759156734545, 0.3632974400707172, 0.3627794557874098, 0.36227339518945245, 0.3617788556178273, 0.3612955316324675, 0.3608228978716863, 0.36036071696555166, 0.3599086014216819, 0.3594664073491057, 0.3590340024828474, 0.35861215268416097, 0.3581995435408312, 0.3577959775479595, 0.3574010696522663, 0.3570147219126579, 0.3566367510696577, 0.35626687299802934, 0.35590486897826407, 0.35555063240892354, 0.3552042531858891, 0.35486503910735595, 0.35453313228983907, 0.354208121495853, 0.3538897759867778, 0.35357837334807024, 0.3532733039570829, 0.3529745375445521, 0.3526819077576901, 0.3523952164261807, 0.35211443491109684, 0.3518392358875392, 0.35156967531989997, 0.3513055958822794, 0.3510466311953609, 0.3507929051504177, 0.35054413810790097, 0.35030014154308586, 0.3500610970345004, 0.34982643782201095, 0.349596331517734, 0.34937081019276156, 0.3491493233127509, 0.34893224923512556, 0.348719408029404, 0.34851079910348937, 0.34830607320615203, 0.3481053105233442, 0.34790871934381795, 0.347715520463951, 0.3475262052503013, 0.34734026123962636, 0.3471577700758234, 0.3469787099147815, 0.3468027615983475, 0.34663015970347866, 0.34646052696909635, 0.346294144211904, 0.3461306057184593, 0.34596990694236546, 0.34581222797260014, 0.34565713641482126, 0.3455050192452599, 0.3453554256361155, 0.3452084450038415, 0.34506400201528364, 0.3449220782199501, 0.34478275128412933, 0.3446456695733752, 0.344511158908433, 0.34437888991480553, 0.34424875699871904, 0.34412088188649564, 0.34399505769006194, 0.3438717491771675, 0.343750290099187, 0.343630926149016, 0.3435135177796814, 0.3433980237402254, 0.34328449766730773, 0.34317279757575814, 0.3430630101773925, 0.34295490279936414, 0.34284861563814595, 0.34274409740567546, 0.3426412413935191, 0.34253989289044257, 0.34244004048682286, 0.34234179847482143, 0.34224511155858456, 0.34214991351733176, 0.3420562128040396, 0.3419640449983526, 0.34187321565341533, 0.3417835380901607, 0.34169507394856014, 0.34160816615321626, 0.34152257818889337];


    var m = [40, 40, 40, 40]; // margins
		var w = 250 - m[1] - m[3]; // width
		var h = 200 - m[0] - m[2]; // height

    function render1(data){

		var x = d3.scale.linear().domain([0, data.length]).range([0, w]);

		var y = d3.scale.linear().domain([0, 1]).range([h, 0]);

		var line = d3.svg.line()

			.x(function(d,i) { 
        // console.log(d)
        // console.log(i)
				return x(i); 
			})
			.y(function(d) { 
				return y(d); 
			})

			// Add an SVG element with the desired dimensions and margin.
			var graph = d3.select("#q1").append("svg:svg")
			      .attr("width", w + m[1] + m[3])
			      .attr("height", h + m[0] + m[2])
			    .append("svg:g")
			      .attr("transform", "translate(" + m[3] + "," + m[0] + ")");

			// create yAxis
			var xAxis = d3.svg.axis().scale(x).tickValues([]);
			// Add the x-axis.
			graph.append("svg:g")
			      .attr("class", "x axis")
			      .attr("transform", "translate(0," + h + ")")
			      .call(xAxis);


			// create left yAxis
			var yAxisLeft = d3.svg.axis().scale(y).orient("left");
			// Add the y-axis to the left
			graph.append("svg:g")
			      .attr("class", "y axis")
			      .attr("transform", "translate(0,0)")
			      .call(yAxisLeft);
			

  			graph.append("svg:path").attr("d", line(data));



    var mouseG = graph.append("g")
    .attr("class", "mouse-over-effects");
    mouseG.append("path") // this is the black vertical line to follow mouse
    .attr("class", "mouse-line")
    .style("stroke", "black")
    .style("stroke-width", "1px")
    .style("opacity", "0");

    mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas
    .attr('width', w) // can't catch mouse events on a g element
    .attr('height', h)
    .attr('fill', 'none')
    .attr('pointer-events', 'all')
    .on('mouseout', function() { // on mouse out hide line, circles and text
        d3.select(".mouse-line")
          .style("opacity", "0");
        d3.select(".mouse-line1")
          .style("opacity", "0");
        d3.select(".mouse-line2")
          .style("opacity", "0");
        d3.select(".mouse-line3")
          .style("opacity", "0");
   
      })
      .on('mouseover', function() { // on mouse in show line, circles and text
        d3.select(".mouse-line")
          .style("opacity", "1");
        d3.select(".mouse-line1")
          .style("opacity", "1");
        d3.select(".mouse-line2")
          .style("opacity", "1");
        d3.select(".mouse-line3")
          .style("opacity", "1");
  
      })
      .on('mousemove', function() { // mouse moving over canvas
        
        var mouse = d3.mouse(this);
        // console.log(mouse[0])
        d3.select(".mouse-line3")
          .attr("d", function() {
            var d = "M" + mouse[0] + "," + h;
            d += " " + mouse[0] + "," + 0;
            return d;
          });
        d3.select(".mouse-line1")
          .attr("d", function() {
            var d = "M" + mouse[0] + "," + h;
            d += " " + mouse[0] + "," + 0;
            return d;
          });
        d3.select(".mouse-line2")
          .attr("d", function() {
            var d = "M" + mouse[0] + "," + h;
            d += " " + mouse[0] + "," + 0;
            return d;
          });
        d3.select(".mouse-line")
          .attr("d", function() {
            var d = "M" + mouse[0] + "," + h;
            d += " " + mouse[0] + "," + 0;
            return d;
          });
          updateTable(mouse[0]);
  
      });
 
    }

    
